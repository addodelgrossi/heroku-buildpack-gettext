#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e

indent() {
    RE="s/^/       /"
    [ $(uname) == "Darwin" ] && sed -l "$RE" || sed -u "$RE"
}

GETTEXT_TARBALL=http://fb_wanted.s3.amazonaws.com/bp/gettext.tar.gz
TARGET_DIR=$HOME
BUILD_DIR=$1
CACHE_DIR=$2
# this trick is borrowed from nodejs buildpack, https://github.com/heroku/heroku-buildpack-nodejs/blob/51ea78e68eccd980f72b9fc62c5e46187d869843/bin/compile#L20
BP_DIR=$(cd "$(dirname ${0:-})"; cd ..; pwd)

echo "----> show path"
echo $PWD
echo $BUILD_DIR
echo "----> end show path"
cd $BUILD_DIR

if [ -d $TARGET_DIR/gettext ]; then
	echo "$PWD/gettext already installed"
	exit 0
fi

echo "-----> Installing gettext..."
curl --silent --max-time 60 --location "$GETTEXT_TARBALL" | tar xz -C "$BUILD_DIR/.heroku"

# display version in a nice way
"$BUILD_DIR/.heroku/gettext/bin/xgettext" --version |& sed 's/xgettext/      gettext/;q'

echo "       Installing profile file..."
mkdir -p "$BUILD_DIR/.profile.d"
cp "$BP_DIR"/profile/* "$BUILD_DIR/.profile.d/"
echo "       Exporting path for subsequent buildpacks..."
echo "export PATH=\"\$PATH:$BUILD_DIR/.heroku/gettext/bin\"" >> "$BP_DIR/export"

echo "-----> done in $TARGET_DIR/.heroku/gettext"

MANAGE_FILE=$(find . -maxdepth 3 -type f -name 'manage.py' | head -1)
MANAGE_FILE=${MANAGE_FILE:2}

echo "-----> Compiling translation files"
echo "-----> manage file $MANAGE_FILE"
echo $MANAGE_FILE
echo "$MANAGE_FILE"
echo $(find . -maxdepth 3 -type f -name 'manage.py' | head -1)
python ./manage.py compilemessages 2>&1 | indent
echo "-----> done compiling translation files"
